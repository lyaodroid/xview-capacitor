{
  "api": {
    "name": "PushNotificationsPlugin",
    "slug": "pushnotificationsplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "register",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Register the app to receive push notifications.\n\nThis method will trigger the `'registration'` event with the push token or\n`'registrationError'` if there was a problem. It does prompt the user for\nnotification permissions, use `requestPermissions()` first.",
        "complexTypes": [],
        "slug": "register"
      },
      {
        "name": "getDeliveredNotifications",
        "signature": "() => Promise<PushNotificationDeliveredList>",
        "parameters": [],
        "returns": "Promise<PushNotificationDeliveredList>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Get a list of notifications that are visible on the notifications screen.",
        "complexTypes": [
          "PushNotificationDeliveredList"
        ],
        "slug": "getdeliverednotifications"
      },
      {
        "name": "removeDeliveredNotifications",
        "signature": "(delivered: PushNotificationDeliveredList) => Promise<void>",
        "parameters": [
          {
            "name": "delivered",
            "docs": "",
            "type": "PushNotificationDeliveredList"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Remove the specified notifications from the notifications screen.",
        "complexTypes": [
          "PushNotificationDeliveredList"
        ],
        "slug": "removedeliverednotifications"
      },
      {
        "name": "removeAllDeliveredNotifications",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Remove all the notifications from the notifications screen.",
        "complexTypes": [],
        "slug": "removealldeliverednotifications"
      },
      {
        "name": "checkPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Check permission to receive push notifications.",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "checkpermissions"
      },
      {
        "name": "requestPermissions",
        "signature": "() => Promise<PermissionStatus>",
        "parameters": [],
        "returns": "Promise<PermissionStatus>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Request permission to receive push notifications.",
        "complexTypes": [
          "PermissionStatus"
        ],
        "slug": "requestpermissions"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"registration\", listenerFunc: (token: PushNotificationToken) => void) => PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'registration'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(token: PushNotificationToken) => void"
          }
        ],
        "returns": "PluginListenerHandle",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Called when the push notification registration finishes without problems.\n\nProvides the push notification token.",
        "complexTypes": [
          "PluginListenerHandle",
          "PushNotificationToken"
        ],
        "slug": "addlistenerregistration-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"registrationError\", listenerFunc: (error: any) => void) => PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'registrationError'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(error: any) => void"
          }
        ],
        "returns": "PluginListenerHandle",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Called when the push notification registration finished with problems.\n\nProvides an error with the registration problem.",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerregistrationerror-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"pushNotificationReceived\", listenerFunc: (notification: PushNotificationSchema) => void) => PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'pushNotificationReceived'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(notification: PushNotificationSchema) => void"
          }
        ],
        "returns": "PluginListenerHandle",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Called when the device receives a push notification.",
        "complexTypes": [
          "PluginListenerHandle",
          "PushNotificationSchema"
        ],
        "slug": "addlistenerpushnotificationreceived-"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"pushNotificationActionPerformed\", listenerFunc: (notification: PushNotificationActionPerformed) => void) => PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'pushNotificationActionPerformed'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(notification: PushNotificationActionPerformed) => void"
          }
        ],
        "returns": "PluginListenerHandle",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Called when an action is performed on a push notification.",
        "complexTypes": [
          "PluginListenerHandle",
          "PushNotificationActionPerformed"
        ],
        "slug": "addlistenerpushnotificationactionperformed-"
      },
      {
        "name": "removeAllListeners",
        "signature": "() => void",
        "parameters": [],
        "returns": "void",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "Remove all native listeners for this plugin.",
        "complexTypes": [],
        "slug": "removealllisteners"
      },
      {
        "name": "unRegister",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "应用退出账号时",
        "complexTypes": [],
        "slug": "unregister"
      },
      {
        "name": "bindAlias",
        "signature": "(options: { alias: string; aliasType?: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ alias: string; aliasType?: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "绑定 别名 umeng 会用到 aliasType 注意老项目迁移",
        "complexTypes": [],
        "slug": "bindalias"
      },
      {
        "name": "unBindAlias",
        "signature": "(options: { alias: string; aliasType?: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ alias: string; aliasType?: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "退出账号时使用\n解绑 别名 umeng 会用到 aliasType 注意老项目迁移",
        "complexTypes": [],
        "slug": "unbindalias"
      },
      {
        "name": "addTags",
        "signature": "(options: { value: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "获取标签 value = \"tag1,tag2....tags\"\n添加标签 用 “,”  分割",
        "complexTypes": [],
        "slug": "addtags"
      },
      {
        "name": "getTags",
        "signature": "() => Promise<{ value: string; }>",
        "parameters": [],
        "returns": "Promise<{ value: string; }>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "获取标签 tags = \"tag1,tag2....tags\"",
        "complexTypes": [],
        "slug": "gettags"
      },
      {
        "name": "deleteTags",
        "signature": "(options: { value: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "删除 标签 value = \"tag1,tag2....tags\"",
        "complexTypes": [],
        "slug": "deletetags"
      },
      {
        "name": "getPushToken",
        "signature": "() => Promise<PushNotificationToken>",
        "parameters": [],
        "returns": "Promise<PushNotificationToken>",
        "tags": [
          {
            "name": "since",
            "text": "1.0.0"
          }
        ],
        "docs": "获取推送token 同时 监听注册 token 也被改变",
        "complexTypes": [
          "PushNotificationToken"
        ],
        "slug": "getpushtoken"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PushNotificationDeliveredList",
      "slug": "pushnotificationdeliveredlist",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "notifications",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [
            "PushNotificationSchema"
          ],
          "type": "PushNotificationSchema[]"
        }
      ]
    },
    {
      "name": "PushNotificationSchema",
      "slug": "pushnotificationschema",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "title",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The notification title.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "subtitle",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The notification subtitle.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "body",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The main text payload for the notification.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "id",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The notification identifier.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "badge",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "The number to display for the app icon badge.",
          "complexTypes": [],
          "type": "number"
        },
        {
          "name": "notification",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "any"
        },
        {
          "name": "data",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "any"
        },
        {
          "name": "click_action",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "link",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "group",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "Set the group identifier for notification grouping\n\nOnly available on Android. Works like `threadIdentifier` on iOS.",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "groupSummary",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "Designate this notification as the summary for an associated `group`.\n\nOnly available on Android.",
          "complexTypes": [],
          "type": "boolean"
        }
      ]
    },
    {
      "name": "PermissionStatus",
      "slug": "permissionstatus",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "receive",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [
            "PermissionState"
          ],
          "type": "PermissionState"
        }
      ]
    },
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => void"
        }
      ]
    },
    {
      "name": "PushNotificationToken",
      "slug": "pushnotificationtoken",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "value",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        }
      ]
    },
    {
      "name": "PushNotificationActionPerformed",
      "slug": "pushnotificationactionperformed",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "actionId",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "inputValue",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [],
          "type": "string"
        },
        {
          "name": "notification",
          "tags": [
            {
              "text": "1.0.0",
              "name": "since"
            }
          ],
          "docs": "",
          "complexTypes": [
            "PushNotificationSchema"
          ],
          "type": "PushNotificationSchema"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [
    {
      "name": "PermissionState",
      "slug": "permissionstate",
      "docs": "",
      "types": [
        {
          "text": "'prompt'",
          "complexTypes": []
        },
        {
          "text": "'prompt-with-rationale'",
          "complexTypes": []
        },
        {
          "text": "'granted'",
          "complexTypes": []
        },
        {
          "text": "'denied'",
          "complexTypes": []
        }
      ]
    }
  ]
}